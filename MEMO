def test_func2_(x):
	term1 = -k1/M1*(x[0]-x[2]) - c1/M1*(x[1]-x[3])
	print"term1 = {0}".format(term1)
	term2 = k1/M2*(x[0]-x[2]) + c1/M2*(x[1]-x[3]) - k2/M2*x[2] - c2/M2*x[3]
	print"term2 = {0}".format(term2)
	return np.array([x[1], term1, x[3], term2]) 

def test_func3(x):
	term1 = k1/M1*(l0-(x[0]-x[2])) - c1/M1*(x[1]-x[3]) - g
	print"term1 = {0}".format(term1)
	term2 = -k1/M2*(l0-(x[0]-x[2])) + c1/M2*(x[1]-x[3]) - k2/M2*x[2] - g
	print"term2 = {0}".format(term2)
	return np.array([x[1], term1, x[3], term2]) 

def test_func4(x):
	term1 = k1/M1*(l0-(x[0]-x[2])) - c1/M1*(x[1]-x[3]) -g
	print"term1 = {0}".format(term1)
	term2 = -k1/M2*(l0-(x[0]-x[2])) + c1/M2*(x[1]-x[3]) -g
	print"term2 = {0}".format(term2)
	return np.array([x[1], term1, x[3], term2]) 
